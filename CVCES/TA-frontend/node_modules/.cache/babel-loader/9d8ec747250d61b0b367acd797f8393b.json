{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"sdp\"\n}, \"Sequence Diagram List\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\"  <textarea class=\\\"wb2\\\" style=\\\"resize:none;\\\" v-model=\\\"condep\\\" name=\\\"\\\" cols=\\\"65\\\" rows=\\\"30\\\" placeholder=\\\"控制依赖关系......\\\"></textarea>\"), _createVNode(_component_el_tree, {\n    data: $data.treedata,\n    props: $data.defaultProps,\n    onNodeClick: $options.handleNodeClick,\n    class: \"td1\"\n  }, null, 8 /* PROPS */, [\"data\", \"props\", \"onNodeClick\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAGEA,oBAAwC;EAArCC,KAAK,EAAC;AAAK,GAAC,uBAAqB;;;;6DAApCC,UAAwC,EAC1CC,qKAAuI,EAErIC,aACmFC;IADzEC,IAAI,EAAEC,cAAQ;IACdC,KAAK,EAAED,kBAAY;IAAGE,WAAU,EAAEC,wBAAe;IAAET,KAAK,EAAC","names":["_createElementVNode","class","_hoisted_1","_createCommentVNode","_createVNode","_component_el_tree","data","$data","props","onNodeClick","$options"],"sourceRoot":"","sources":["C:\\Users\\yang\\Desktop\\CVCES\\TA-frontend\\src\\views\\GetSD.vue"],"sourcesContent":["<template>\r\n\r\n\r\n  <p class=\"sdp\">Sequence Diagram List</p>\r\n<!--  <textarea class=\"wb2\" style=\"resize:none;\" v-model=\"condep\" name=\"\" cols=\"65\" rows=\"30\" placeholder=\"控制依赖关系......\"></textarea>-->\r\n\r\n  <el-tree :data=\"treedata\"\r\n           :props=\"defaultProps\" @node-click=\"handleNodeClick\" class=\"td1\"></el-tree>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"condependence\",\r\n  data() {\r\n    return {\r\n      condep : '',\r\n      datadep : '',\r\n\r\n      treedata: [\r\n      ],\r\n\r\n      defaultProps: {\r\n        label: 'label'\r\n      }\r\n\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.UploadSD();\r\n  },\r\n  computed: {\r\n\r\n  },\r\n\r\n  methods: {\r\n\r\n    handleNodeClick(data) {\r\n      console.log(data.label);\r\n    },\r\n\r\n    UploadSD() {\r\n      var _this = this;\r\n\r\n      axios.post('http://localhost:8077/sscm/uploadsd').then(response => {\r\n        let tres = response.data;\r\n\r\n        for(var k in tres){\r\n\r\n          console.log(tres[k]);\r\n            let obj = {\r\n              label: tres[k]\r\n            };\r\n            _this.treedata.push(obj);\r\n        }\r\n\r\n        this.$message({\r\n          message: \"Identifying requirements dependencies successfully!\",\r\n          type: 'success'\r\n        })\r\n      });\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n\r\n.td1{\r\n  position: absolute;\r\n  top: 200px;\r\n  left: 80px;\r\n  height: 500px;\r\n  width: 200px;\r\n  transform: scale(130%);\r\n  \r\n  border-color: black;\r\n}\r\n\r\n.td1.el-tree-node__label{\r\n  font-size: 25px;\r\n}\r\n\r\n.sdp{\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 60px;\r\n  width: 500px;\r\n  font-size: 25px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}