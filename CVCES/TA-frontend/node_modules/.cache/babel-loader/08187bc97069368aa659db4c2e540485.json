{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: 'ExcelTransferTable',\n  components: {},\n  data() {\n    return {\n      tableData: [],\n      // 表格里面的数据\n      Id: '',\n      brand: \"\",\n      res: '',\n      num: '',\n      proname: this.$route.query.projectname,\n      desversion: this.$route.query.designversion\n    };\n  },\n  mounted() {\n    this.getresult();\n  },\n  methods: {\n    //通过链接访问后端查找相应项目及其版本的验证结果\n    getresult() {\n      var _this = this;\n      console.log(_this.desversion);\n      console.log(_this.proname);\n      axios.get('http://localhost:8077/sscm/getres', {\n        params: {\n          pname: _this.proname,\n          dname: _this.desversion\n        }\n      }).then(function (response) {\n        console.log(response);\n        console.log(response.data);\n        let tres = response.data;\n        _this.res = \"所有模型的状态空间为：\" + tres[\"statespace\"] + \"\\n\";\n        for (var k in tres) {\n          if (k == \"statespace\") {\n            continue;\n          } else {\n            let str = \"\";\n            if (tres[k].includes(\"不满足性质\")) {\n              str = \"false\";\n              _this.res += k + tres[k];\n            } else if (tres[k].includes(\"满足性质\")) {\n              str = \"true\";\n              _this.res += k + tres[k];\n            } else {\n              str = \"error\";\n            }\n            let obj = {\n              Id: _this.tableData.length + 1,\n              p: k,\n              state: str\n            };\n            _this.tableData.push(obj);\n          }\n        }\n      }, function (err) {\n        console.log(err);\n      });\n    },\n    computeState() {\n      axios.post('http://localhost:8077/sscm/Statenum').then(response => {\n        console.log(response.data);\n        //this.res = this.res +\",\"+ response.data +\"\\n\";\n        console.log(\"num:\" + response.data);\n      }, function (err) {\n        console.log(err);\n      });\n    },\n    check() {\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行验证');\n      this.tableData.forEach(item => {\n        if (item.Id == this.Id) {\n          this.msg = this.$message({\n            // 需要一个参数接收这个$message(msg来自data)\n            duration: 0,\n            type: 'warning',\n            message: '等待中....'\n          });\n          axios.post('http://localhost:8077/sscm/Check', item.p).then(response => {\n            console.log(response.data);\n            this.msg.close(); // 这样才能正确关闭\n            this.msg = this.$message({\n              duration: 1000,\n              type: 'success',\n              message: '运行成功！'\n            });\n            let ress = response.data;\n            if (ress[\"RES\"] == \"meiyou\") {\n              this.res = this.res + item.p + \"性质验证出错，请稍后重试!\\n\";\n              this.computeState();\n              item.state = \"error\";\n            } else if (ress[\"RES\"] == \"yes\") {\n              this.res = this.res + item.p + \"满足该性质，状态探索：\" + ress[\"states\"] + \"，运行时间：\" + ress[\"time\"] + \"\\n\";\n              this.computeState();\n              item.state = \"true\";\n            } else {\n              this.res = this.res + item.p + \"不满足该性质，状态探索：\" + ress[\"states\"] + \"，运行时间：\" + ress[\"time\"] + \"\\n\";\n              this.computeState();\n              item.state = \"false\";\n            }\n          }, function (err) {\n            console.log(err);\n          });\n        }\n      });\n    },\n    del() {\n      // 判断有没有选中一行数据\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行移除');\n      this.$confirm('您确定要删除当前选择的性质吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        //定义一个新的数组\n        const tempArr = [];\n        //遍历table表的数组，如果遍历到的table中的id不等于选中的那一行id，那么将数\n        //据push到新的数组里面，也就是说，新的数组里面没有选中的那一行的值\n        this.tableData.forEach(item => {\n          if (item.Id < this.Id) {\n            tempArr.push(item);\n          } else if (item.Id > this.Id) {\n            item.Id--;\n            tempArr.push(item);\n          } else {}\n        });\n        //将新的数组赋值给table表数组，此时选中那一行删除成功\n        this.tableData = tempArr;\n        //将选中的一行id置空。\n        this.Id = '';\n      });\n    },\n    //row是选中这一行的全部数据，如果table的数组是从后端请求回来的，可以将id替换成每一行唯一的那个标志，比如序号等等。\n    chooseItem(row) {\n      this.Id = row.Id;\n      console.log(this.Id);\n    },\n    add() {\n      console.log(this.brand);\n      if (this.brand != \"\") {\n        //如果输入的值不为空\n        let obj = {\n          Id: this.tableData.length + 1,\n          p: this.brand,\n          state: \"\"\n        };\n        this.tableData.push(obj);\n        let param = {\n          \"data\": this.brand\n        };\n        axios.post('http://localhost:8077/sscm/addquery', param).then(function (response) {\n          console.log(response.data);\n        }, function (err) {\n          console.log(err);\n        });\n        this.brand = \"\";\n      } else {\n        let obj = {\n          Id: this.tableData.length + 1,\n          p: \"\",\n          state: \"\"\n        };\n        this.tableData.push(obj);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAoDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE,CAAE,CAAC;EAEfC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAEV;MAAE;MACHC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAC,EAAE;MACRC,GAAG,EAAE,EAAE;MACPC,GAAG,EAAC,EAAE;MACNC,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW;MACtCC,UAAU,EAAE,IAAI,CAACH,MAAM,CAACC,KAAK,CAACG;IAChC;EACF,CAAC;EAEDC,OAAO,GAAG;IACR,IAAI,CAACC,SAAS,EAAC;EACjB,CAAC;EAEDC,OAAO,EAAE;IAEP;IACAD,SAAS,GAAG;MACV,IAAIE,KAAI,GAAI,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACL,UAAU,CAAC;MAC7BM,OAAO,CAACC,GAAG,CAACF,KAAK,CAACT,OAAO,CAAC;MAE1BT,KAAK,CAACqB,GAAG,CAAC,mCAAmC,EAAC;QAC5CC,MAAM,EAAE;UACNC,KAAK,EAAEL,KAAK,CAACT,OAAO;UACpBe,KAAK,EAAEN,KAAK,CAACL;QACf;MACF,CAAC,CAAC,CAACY,IAAI,CAAC,UAAUC,QAAQ,EAAE;QAC1BP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;QACrBP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAACvB,IAAI,CAAC;QAE1B,IAAIwB,IAAG,GAAID,QAAQ,CAACvB,IAAI;QACxBe,KAAK,CAACX,GAAE,GAAI,aAAa,GAACoB,IAAI,CAAC,YAAY,CAAC,GAAC,IAAI;QAEjD,KAAI,IAAIC,KAAKD,IAAI,EAAC;UAChB,IAAGC,KAAK,YAAY,EAAC;YACnB;UACF,OACI;YACF,IAAIC,GAAE,GAAI,EAAE;YACZ,IAAGF,IAAI,CAACC,CAAC,CAAC,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAC;cAC3BD,GAAE,GAAI,OAAO;cACbX,KAAK,CAACX,GAAE,IAAKqB,IAAID,IAAI,CAACC,CAAC,CAAC;YAC1B,OACK,IAAGD,IAAI,CAACC,CAAC,CAAC,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAC;cAC/BD,GAAE,GAAI,MAAM;cACZX,KAAK,CAACX,GAAE,IAAKqB,IAAID,IAAI,CAACC,CAAC,CAAC;YAC1B,OACI;cACFC,GAAE,GAAI,OAAO;YACf;YACA,IAAIE,GAAE,GAAI;cACR1B,EAAE,EAAEa,KAAK,CAACd,SAAS,CAAC4B,MAAM,GAAC,CAAC;cAC5BC,CAAC,EAAEL,CAAC;cACJM,KAAK,EAAEL;YACT,CAAC;YACDX,KAAK,CAACd,SAAS,CAAC+B,IAAI,CAACJ,GAAG,CAAC;UAC3B;QACF;MAEF,CAAC,EAAE,UAAUK,GAAG,EAAE;QAChBjB,OAAO,CAACC,GAAG,CAACgB,GAAG;MACjB,CAAC,CAAC;IAGJ,CAAC;IAEDC,YAAY,GAAE;MACZrC,KAAK,CAACsC,IAAI,CAAC,qCAAqC,CAAC,CAACb,IAAI,CAACC,QAAO,IAAK;QACjEP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAACvB,IAAI,CAAC;QAC1B;QACAgB,OAAO,CAACC,GAAG,CAAC,MAAM,GAACM,QAAQ,CAACvB,IAAI,CAAC;MACnC,CAAC,EAAE,UAAUiC,GAAG,EAAE;QAChBjB,OAAO,CAACC,GAAG,CAACgB,GAAG;MACjB,CAAC,CAAC;IACJ,CAAC;IAEDG,KAAK,GAAE;MACL,IAAI,CAAC,IAAI,CAAClC,EAAE,EAAE,OAAO,IAAI,CAACmC,QAAQ,CAACC,OAAO,CAAC,cAAc;MACzD,IAAI,CAACrC,SAAS,CAACsC,OAAO,CAACC,IAAG,IAAI;QAC5B,IAAGA,IAAI,CAACtC,EAAC,IAAK,IAAI,CAACA,EAAE,EAAC;UACpB,IAAI,CAACuC,GAAE,GAAI,IAAI,CAACJ,QAAQ,CAAC;YAAE;YACzBK,QAAQ,EAAE,CAAC;YACXC,IAAI,EAAE,SAAS;YACfC,OAAO,EAAE;UACX,CAAC,CAAC;UACF/C,KAAK,CAACsC,IAAI,CAAC,kCAAkC,EAAEK,IAAI,CAACV,CAAC,CAAC,CAACR,IAAI,CAACC,QAAO,IAAK;YACtEP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAACvB,IAAI,CAAC;YAC1B,IAAI,CAACyC,GAAG,CAACI,KAAK,EAAE,EAAG;YACnB,IAAI,CAACJ,GAAE,GAAI,IAAI,CAACJ,QAAQ,CAAC;cACvBK,QAAQ,EAAE,IAAI;cACdC,IAAI,EAAE,SAAS;cACfC,OAAO,EAAE;YACX,CAAC,CAAC;YAEF,IAAIE,IAAG,GAAIvB,QAAQ,CAACvB,IAAI;YAExB,IAAG8C,IAAI,CAAC,KAAK,CAAC,IAAE,QAAQ,EAAC;cACvB,IAAI,CAAC1C,GAAE,GAAI,IAAI,CAACA,GAAG,GAACoC,IAAI,CAACV,CAAC,GAAC,iBAAiB;cAC5C,IAAI,CAACI,YAAY,EAAE;cACnBM,IAAI,CAACT,KAAI,GAAI,OAAO;YACtB,OACK,IAAGe,IAAI,CAAC,KAAK,KAAK,KAAK,EAAC;cAC3B,IAAI,CAAC1C,GAAE,GAAI,IAAI,CAACA,GAAG,GAACoC,IAAI,CAACV,CAAC,GAAC,aAAa,GAACgB,IAAI,CAAC,QAAQ,CAAC,GAAC,QAAQ,GAACA,IAAI,CAAC,MAAM,CAAC,GAAC,IAAI;cAClF,IAAI,CAACZ,YAAY,EAAE;cACnBM,IAAI,CAACT,KAAI,GAAI,MAAM;YACrB,OACI;cACF,IAAI,CAAC3B,GAAE,GAAI,IAAI,CAACA,GAAG,GAACoC,IAAI,CAACV,CAAC,GAAC,cAAc,GAACgB,IAAI,CAAC,QAAQ,CAAC,GAAC,QAAQ,GAACA,IAAI,CAAC,MAAM,CAAC,GAAC,IAAI;cACnF,IAAI,CAACZ,YAAY,EAAE;cACnBM,IAAI,CAACT,KAAI,GAAI,OAAO;YACtB;UACF,CAAC,EAAE,UAAUE,GAAG,EAAE;YAEhBjB,OAAO,CAACC,GAAG,CAACgB,GAAG;UACjB,CAAC,CAAC;QAEJ;MACF,CAAC;IACH,CAAC;IAEDc,GAAG,GAAG;MACJ;MACA,IAAI,CAAC,IAAI,CAAC7C,EAAE,EAAE,OAAO,IAAI,CAACmC,QAAQ,CAACC,OAAO,CAAC,cAAc;MACzD,IAAI,CAACU,QAAQ,CAAC,iBAAiB,EAAE,IAAI,EAAE;QACrCC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBP,IAAI,EAAE;MACR,CAAC,CAAC,CAACrB,IAAI,CAAC,MAAM;QACZ;QACA,MAAM6B,OAAM,GAAI,EAAC;QACjB;QACA;QACA,IAAI,CAAClD,SAAS,CAACsC,OAAO,CAACC,IAAG,IAAK;UAC7B,IAAIA,IAAI,CAACtC,EAAC,GAAI,IAAI,CAACA,EAAE,EAAE;YACrBiD,OAAO,CAACnB,IAAI,CAACQ,IAAI;UACnB,OACK,IAAGA,IAAI,CAACtC,EAAC,GAAI,IAAI,CAACA,EAAE,EAAC;YACxBsC,IAAI,CAACtC,EAAE,EAAE;YACTiD,OAAO,CAACnB,IAAI,CAACQ,IAAI;UACnB,OACI,CAEJ;QACF,CAAC;QACT;QACQ,IAAI,CAACvC,SAAQ,GAAIkD,OAAM;QAC/B;QACQ,IAAI,CAACjD,EAAC,GAAI,EAAC;MACb,CAAC;IACH,CAAC;IACL;IACIkD,UAAU,CAACC,GAAG,EAAE;MACd,IAAI,CAACnD,EAAC,GAAImD,GAAG,CAACnD,EAAE;MAChBc,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,EAAE,CAAC;IACtB,CAAC;IACDoD,GAAG,GAAG;MACJtC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,KAAK,CAAC;MACvB,IAAI,IAAI,CAACA,KAAI,IAAK,EAAE,EAAE;QAAG;QACvB,IAAIyB,GAAE,GAAI;UACR1B,EAAE,EAAC,IAAI,CAACD,SAAS,CAAC4B,MAAM,GAAC,CAAC;UAC1BC,CAAC,EAAE,IAAI,CAAC3B,KAAK;UACb4B,KAAK,EAAC;QACR,CAAC;QACD,IAAI,CAAC9B,SAAS,CAAC+B,IAAI,CAACJ,GAAG,CAAC;QACxB,IAAI2B,KAAI,GAAI;UAAC,MAAM,EAAE,IAAI,CAACpD;QAAK,CAAC;QAChCN,KAAK,CAACsC,IAAI,CAAC,qCAAqC,EAAEoB,KAAK,CAAC,CAACjC,IAAI,CAAC,UAASC,QAAQ,EAAE;UAC/EP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAACvB,IAAI;QAC3B,CAAC,EAAE,UAASiC,GAAG,EAAC;UACdjB,OAAO,CAACC,GAAG,CAACgB,GAAG;QACjB,CAAC,CAAC;QAEF,IAAI,CAAC9B,KAAI,GAAI,EAAE;MACjB,OAAO;QACL,IAAIyB,GAAE,GAAI;UACR1B,EAAE,EAAC,IAAI,CAACD,SAAS,CAAC4B,MAAM,GAAC,CAAC;UAC1BC,CAAC,EAAE,EAAE;UACLC,KAAK,EAAC;QACR,CAAC;QACD,IAAI,CAAC9B,SAAS,CAAC+B,IAAI,CAACJ,GAAG,CAAC;MAC1B;IAEF;EACF;AACF","names":["axios","name","components","data","tableData","Id","brand","res","num","proname","$route","query","projectname","desversion","designversion","mounted","getresult","methods","_this","console","log","get","params","pname","dname","then","response","tres","k","str","includes","obj","length","p","state","push","err","computeState","post","check","$message","warning","forEach","item","msg","duration","type","message","close","ress","del","$confirm","confirmButtonText","cancelButtonText","tempArr","chooseItem","row","add","param"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\Desktop\\软件需求与设计模型的形式化验证工具\\TA-frontend\\src\\views\\Checkproperties.vue"],"sourcesContent":["<template>\n  <div class=\"tt\">\n    <el-table class=\"t\"\n              :row-style=\"{height:'40px'}\" max-height=\"250\" style=\"font-size: 15px\"\n              :data=\"tableData\"\n              border\n              fit\n              highlight-current-row\n              height=\"240\"\n              @cell-click=\"chooseItem\"\n    >\n      <el-table-column\n          property=\"Id\"\n          label=\"序号\"\n          width=\"60\">\n      </el-table-column>\n\n      <el-table-column\n          property=\"p\"\n          label=\"性质\"\n          width=\"890\">\n      </el-table-column>\n\n      <el-table-column\n          property=\"state\"\n          label=\"状态\"\n          width=\"60\">\n      </el-table-column>\n\n    </el-table>\n\n    <div class=\"n1\">\n      <p>性质撰写</p>\n    </div>\n    <div class=\"in\">\n      <textarea v-model=\"brand\" cols=\"140\" rows=\"7\"></textarea>\n    </div>\n    <div class=\"n2\">\n      <p>验证结果</p>\n    </div>\n    <div class=\"res\">\n      <textarea v-model=\"res\" cols=\"140\" rows=\"8\"></textarea>\n    </div>\n\n    <el-button class=\"b1b\" @click=\"check()\">开始验证</el-button>\n    <el-button class=\"b2b\" @click=\"add\">添加</el-button>\n    <el-button class=\"b3b\" @click=\"del()\">删除</el-button>\n  </div>\n</template>\n\n<script>\n\nimport axios from \"axios\";\n\nexport default {\n  name: 'ExcelTransferTable',\n  components: { },\n\n  data() {\n    return {\n      tableData: [\n\n      ], // 表格里面的数据\n      Id: '',\n      brand:\"\",\n      res: '',\n      num:'',\n      proname: this.$route.query.projectname,\n      desversion: this.$route.query.designversion,\n    }\n  },\n\n  mounted() {\n    this.getresult()\n  },\n\n  methods: {\n\n    //通过链接访问后端查找相应项目及其版本的验证结果\n    getresult() {\n      var _this = this;\n      console.log(_this.desversion);\n      console.log(_this.proname);\n\n      axios.get('http://localhost:8077/sscm/getres',{\n        params: {\n          pname: _this.proname,\n          dname: _this.desversion\n        }\n      }).then(function (response) {\n        console.log(response);\n        console.log(response.data);\n\n        let tres = response.data;\n        _this.res = \"所有模型的状态空间为：\"+tres[\"statespace\"]+\"\\n\";\n\n        for(var k in tres){\n          if(k == \"statespace\"){\n            continue;\n          }\n          else{\n            let str = \"\";\n            if(tres[k].includes(\"不满足性质\")){\n              str = \"false\";\n              _this.res += k + tres[k];\n            }\n            else if(tres[k].includes(\"满足性质\")){\n              str = \"true\";\n              _this.res += k + tres[k];\n            }\n            else{\n              str = \"error\";\n            }\n            let obj = {\n              Id: _this.tableData.length+1,\n              p: k,\n              state: str,\n            };\n            _this.tableData.push(obj);\n          }\n        }\n\n      }, function (err) {\n        console.log(err)\n      });\n\n\n    },\n\n    computeState(){\n      axios.post('http://localhost:8077/sscm/Statenum').then(response => {\n        console.log(response.data);\n        //this.res = this.res +\",\"+ response.data +\"\\n\";\n        console.log(\"num:\"+response.data);\n      }, function (err) {\n        console.log(err)\n      });\n    },\n\n    check(){\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行验证')\n      this.tableData.forEach(item =>{\n        if(item.Id == this.Id){\n          this.msg = this.$message({ // 需要一个参数接收这个$message(msg来自data)\n            duration: 0,\n            type: 'warning',\n            message: '等待中....'\n          });\n          axios.post('http://localhost:8077/sscm/Check', item.p).then(response => {\n            console.log(response.data);\n            this.msg.close();  // 这样才能正确关闭\n            this.msg = this.$message({\n              duration: 1000,\n              type: 'success',\n              message: '运行成功！'\n            });\n\n            let ress = response.data;\n\n            if(ress[\"RES\"]==\"meiyou\"){\n              this.res = this.res+item.p+\"性质验证出错，请稍后重试!\\n\";\n              this.computeState();\n              item.state = \"error\";\n            }\n            else if(ress[\"RES\"] == \"yes\"){\n              this.res = this.res+item.p+\"满足该性质，状态探索：\"+ress[\"states\"]+\"，运行时间：\"+ress[\"time\"]+\"\\n\";\n              this.computeState();\n              item.state = \"true\";\n            }\n            else{\n              this.res = this.res+item.p+\"不满足该性质，状态探索：\"+ress[\"states\"]+\"，运行时间：\"+ress[\"time\"]+\"\\n\";\n              this.computeState();\n              item.state = \"false\";\n            }\n          }, function (err) {\n\n            console.log(err)\n          });\n\n        }\n      })\n    },\n\n    del() {\n      // 判断有没有选中一行数据\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行移除')\n      this.$confirm('您确定要删除当前选择的性质吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        //定义一个新的数组\n        const tempArr = []\n        //遍历table表的数组，如果遍历到的table中的id不等于选中的那一行id，那么将数\n        //据push到新的数组里面，也就是说，新的数组里面没有选中的那一行的值\n        this.tableData.forEach(item => {\n          if (item.Id < this.Id) {\n            tempArr.push(item)\n          }\n          else if(item.Id > this.Id){\n            item.Id--;\n            tempArr.push(item)\n          }\n          else{\n\n          }\n        })\n//将新的数组赋值给table表数组，此时选中那一行删除成功\n        this.tableData = tempArr\n//将选中的一行id置空。\n        this.Id = ''\n      })\n    },\n//row是选中这一行的全部数据，如果table的数组是从后端请求回来的，可以将id替换成每一行唯一的那个标志，比如序号等等。\n    chooseItem(row) {\n      this.Id = row.Id;\n      console.log(this.Id);\n    },\n    add() {\n      console.log(this.brand);\n      if (this.brand != \"\") {  //如果输入的值不为空\n        let obj = {\n          Id:this.tableData.length+1,\n          p: this.brand,\n          state:\"\",\n        };\n        this.tableData.push(obj);\n        let param = {\"data\": this.brand};\n        axios.post('http://localhost:8077/sscm/addquery', param).then(function(response) {\n          console.log(response.data)\n        }, function(err){\n          console.log(err)\n        });\n\n        this.brand = \"\";\n      } else {\n        let obj = {\n          Id:this.tableData.length+1,\n          p: \"\",\n          state:\"\",\n        };\n        this.tableData.push(obj);\n      }\n\n    },\n  }\n}\n</script>\n\n<style scoped>\n.tt{\n  position: absolute;\n  top: 50px;\n}\n\n.t{\n  height: 250px;\n}\n\n.in{\n  position: absolute;\n  top: 280px;\n  width: 100px;\n}\n\n.res{\n  position: absolute;\n  top: 420px;\n  width: 100px;\n}\n\n.n1{\n  position: absolute;\n  top: 240px;\n}\n\n.n2{\n  position: absolute;\n  top: 380px;\n}\n\n.b1b{\n  position: absolute;\n  left: 1050px;\n  top: 50px;\n  width: 100px;\n}\n\n.b2b{\n  position: absolute;\n  left: 1040px;\n  top: 100px;\n  width: 100px;\n}\n.b3b{\n  position: absolute;\n  left: 1040px;\n  top: 150px;\n  width: 100px;\n}\n\n.el-table td {\n  border-bottom: none;\n}\n.tableStyle::before{\n  width: 0;\n}\n.el-table{\n  border: 1px solid #ccc;\n}\n</style>"]},"metadata":{},"sourceType":"module"}