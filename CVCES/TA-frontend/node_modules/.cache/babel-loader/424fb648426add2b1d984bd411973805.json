{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-16a08b71\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"tt\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"n1\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"性质撰写\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"in\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"n2\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"验证结果\")], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"res\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"n3\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"定位结果\")], -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"dw\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_table, {\n    class: \"t\",\n    \"row-style\": {\n      height: '40px'\n    },\n    \"max-height\": \"250\",\n    style: {\n      \"font-size\": \"15px\"\n    },\n    data: $data.tableData,\n    border: \"\",\n    fit: \"\",\n    \"highlight-current-row\": \"\",\n    height: \"200\",\n    onCellClick: $options.chooseItem\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      property: \"Id\",\n      label: \"序号\",\n      width: \"60\"\n    }), _createVNode(_component_el_table_column, {\n      property: \"p\",\n      label: \"性质\",\n      width: \"890\"\n    }), _createVNode(_component_el_table_column, {\n      property: \"state\",\n      label: \"状态\",\n      width: \"60\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\", \"onCellClick\"]), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.brand = $event),\n    cols: \"137\",\n    rows: \"3\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.brand]])]), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.res = $event),\n    cols: \"65\",\n    rows: \"10\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.res]])]), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.dingwei = $event),\n    cols: \"65\",\n    rows: \"10\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.dingwei]])]), _createVNode(_component_el_button, {\n    class: \"b1b\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.check())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"开始验证\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    class: \"b2b\",\n    onClick: $options.add\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"添加\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n    class: \"b3b\",\n    onClick: _cache[4] || (_cache[4] = $event => $options.del())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"删除\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    class: \"b4b\",\n    onClick: _cache[5] || (_cache[5] = $event => $options.localize())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"定位\")]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAI;gEA8BbC,oBAEM;EAFDD,KAAK,EAAC;AAAI,iBACbC,oBAAW,WAAR,MAAI;;EAEJD,KAAK,EAAC;AAAI;gEAGfC,oBAEM;EAFDD,KAAK,EAAC;AAAI,iBACbC,oBAAW,WAAR,MAAI;;EAEJD,KAAK,EAAC;AAAK;gEAGhBC,oBAEM;EAFDD,KAAK,EAAC;AAAI,iBACbC,oBAAW,WAAR,MAAI;;EAEJD,KAAK,EAAC;AAAI;;;;;uBA7CjBE,oBAsDM,OAtDNC,UAsDM,GArDJC,aA2BWC;IA3BDL,KAAK,EAAC,GAAG;IACR,WAAS,EAAE;MAAAM;IAAA,CAAe;IAAE,YAAU,EAAC,KAAK;IAACC,KAAuB,EAAvB;MAAA;IAAA,CAAuB;IACpEC,IAAI,EAAEC,eAAS;IAChBC,MAAM,EAAN,EAAM;IACNC,GAAG,EAAH,EAAG;IACH,uBAAqB,EAArB,EAAqB;IACrBL,MAAM,EAAC,KAAK;IACXM,WAAU,EAAEC;;sBAErB,MAIkB,CAJlBT,aAIkBU;MAHdC,QAAQ,EAAC,IAAI;MACbC,KAAK,EAAC,IAAI;MACVC,KAAK,EAAC;QAGVb,aAIkBU;MAHdC,QAAQ,EAAC,GAAG;MACZC,KAAK,EAAC,IAAI;MACVC,KAAK,EAAC;QAGVb,aAIkBU;MAHdC,QAAQ,EAAC,OAAO;MAChBC,KAAK,EAAC,IAAI;MACVC,KAAK,EAAC;;;8CAKZC,UAEM,EACNjB,oBAEM,OAFNkB,UAEM,mBADJlB,oBAAyD;+DAAtCQ,WAAK;IAAEW,IAAI,EAAC,KAAK;IAACC,IAAI,EAAC;iDAAvBZ,WAAK,OAE1Ba,UAEM,EACNrB,oBAEM,OAFNsB,UAEM,mBADJtB,oBAAuD;+DAApCQ,SAAG;IAAEW,IAAI,EAAC,IAAI;IAACC,IAAI,EAAC;iDAApBZ,SAAG,OAExBe,UAEM,EACNvB,oBAEM,OAFNwB,UAEM,mBADJxB,oBAA2D;+DAAxCQ,aAAO;IAAEW,IAAI,EAAC,IAAI;IAACC,IAAI,EAAC;iDAAxBZ,aAAO,OAI5BL,aAAwDsB;IAA7C1B,KAAK,EAAC,KAAK;IAAE2B,OAAK,sCAAEd,cAAK;;sBAAI,MAAI,kBAAJ,MAAI;;MAC5CT,aAAkDsB;IAAvC1B,KAAK,EAAC,KAAK;IAAE2B,OAAK,EAAEd;;sBAAK,MAAE,kBAAF,IAAE;;kCACtCT,aAAoDsB;IAAzC1B,KAAK,EAAC,KAAK;IAAE2B,OAAK,sCAAEd,YAAG;;sBAAI,MAAE,kBAAF,IAAE;;MACxCT,aAAyDsB;IAA9C1B,KAAK,EAAC,KAAK;IAAE2B,OAAK,sCAAEd,iBAAQ;;sBAAI,MAAE,kBAAF,IAAE","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_el_table","height","style","data","$data","border","fit","onCellClick","$options","_component_el_table_column","property","label","width","_hoisted_2","_hoisted_3","cols","rows","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_component_el_button","onClick"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\Desktop\\软件需求与设计模型的形式化验证工具v2.0\\TA-frontend\\src\\views\\Checkproperties.vue"],"sourcesContent":["<template>\n  <div class=\"tt\">\n    <el-table class=\"t\"\n              :row-style=\"{height:'40px'}\" max-height=\"250\" style=\"font-size: 15px\"\n              :data=\"tableData\"\n              border\n              fit\n              highlight-current-row\n              height=\"200\"\n              @cell-click=\"chooseItem\"\n    >\n      <el-table-column\n          property=\"Id\"\n          label=\"序号\"\n          width=\"60\">\n      </el-table-column>\n\n      <el-table-column\n          property=\"p\"\n          label=\"性质\"\n          width=\"890\">\n      </el-table-column>\n\n      <el-table-column\n          property=\"state\"\n          label=\"状态\"\n          width=\"60\">\n      </el-table-column>\n\n    </el-table>\n\n    <div class=\"n1\">\n      <p>性质撰写</p>\n    </div>\n    <div class=\"in\">\n      <textarea v-model=\"brand\" cols=\"137\" rows=\"3\"></textarea>\n    </div>\n    <div class=\"n2\">\n      <p>验证结果</p>\n    </div>\n    <div class=\"res\">\n      <textarea v-model=\"res\" cols=\"65\" rows=\"10\"></textarea>\n    </div>\n    <div class=\"n3\">\n      <p>定位结果</p>\n    </div>\n    <div class=\"dw\">\n      <textarea v-model=\"dingwei\" cols=\"65\" rows=\"10\"></textarea>\n    </div>\n\n\n    <el-button class=\"b1b\" @click=\"check()\">开始验证</el-button>\n    <el-button class=\"b2b\" @click=\"add\">添加</el-button>\n    <el-button class=\"b3b\" @click=\"del()\">删除</el-button>\n    <el-button class=\"b4b\" @click=\"localize()\">定位</el-button>\n  </div>\n</template>\n\n<script>\n\nimport axios from \"axios\";\n\nexport default {\n  name: 'ExcelTransferTable',\n  components: { },\n\n  data() {\n    return {\n      tableData: [\n\n      ], // 表格里面的数据\n      Id: '',\n      brand:\"\",\n      res: '',\n      dingwei: '',\n      num:'',\n      proname: this.$route.query.projectname,\n      desversion: this.$route.query.designversion,\n    }\n  },\n\n  mounted() {\n    this.getresult()\n  },\n\n  methods: {\n\n    localize(){\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行定位')\n      this.tableData.forEach(item =>{\n        if(item.Id == this.Id){\n          if(item.state == \"true\"){\n            this.$message.warning('满足该性质，无法定位错误原因！')\n          }\n          else if(item.state == \"false\") {\n            this.msg = this.$message({ // 需要一个参数接收这个$message(msg来自data)\n              duration: 0,\n              type: 'warning',\n              message: '定位中....'\n            });\n            axios.post('http://localhost:8077/sscm/Localize', item.p).then(response => {\n              console.log(response.data);\n              this.msg.close();  // 这样才能正确关闭\n              this.msg = this.$message({\n                duration: 1000,\n                type: 'success',\n                message: '定位成功！'\n              });\n              let ress = response.data;\n              this.dingwei = this.dingwei + \"\\n\" +item.p + ress[\"dwres\"];\n\n            }, function (err) {\n\n              console.log(err)\n            });\n          }\n          else{\n            this.$message.warning('该性质还未进行验证，无法定位错误原因！')\n          }\n\n        }\n      })\n\n    },\n\n    //通过链接访问后端查找相应项目及其版本的验证结果\n    getresult() {\n      var _this = this;\n      console.log(_this.desversion);\n      console.log(_this.proname);\n\n      axios.get('http://localhost:8077/sscm/getres',{\n        params: {\n          pname: _this.proname,\n          dname: _this.desversion\n        }\n      }).then(function (response) {\n        console.log(response);\n        console.log(response.data);\n\n        let tres = response.data;\n        _this.res = \"所有模型的状态空间为：\"+tres[\"statespace\"]+\"\\n\\n\";\n        _this.dingwei = tres[\"loc\"]+\"\\n\";\n\n        for(var k in tres){\n          if(k == \"statespace\" || k == \"loc\"){\n            continue;\n          }\n          else{\n            let str = \"\";\n            if(tres[k].includes(\"性质不满足\")){\n              str = \"false\";\n              _this.res += k + tres[k]+\"\\n\";\n            }\n            else if(tres[k].includes(\"性质满足\")){\n              str = \"true\";\n              _this.res += k + tres[k]+\"\\n\";\n            }\n            else{\n              str = \"error\";\n            }\n            let obj = {\n              Id: _this.tableData.length+1,\n              p: k,\n              state: str,\n            };\n            _this.tableData.push(obj);\n          }\n        }\n\n      }, function (err) {\n        console.log(err)\n      });\n\n\n    },\n\n    computeState(){\n      axios.post('http://localhost:8077/sscm/Statenum').then(response => {\n        console.log(response.data);\n        //this.res = this.res +\",\"+ response.data +\"\\n\";\n        console.log(\"num:\"+response.data);\n      }, function (err) {\n        console.log(err)\n      });\n    },\n\n    check(){\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行验证')\n      this.tableData.forEach(item =>{\n        if(item.Id == this.Id){\n          this.msg = this.$message({ // 需要一个参数接收这个$message(msg来自data)\n            duration: 0,\n            type: 'warning',\n            message: '等待中....'\n          });\n          axios.post('http://localhost:8077/sscm/Check', item.p).then(response => {\n            console.log(response.data);\n            this.msg.close();  // 这样才能正确关闭\n            this.msg = this.$message({\n              duration: 1000,\n              type: 'success',\n              message: '运行成功！'\n            });\n\n            let ress = response.data;\n\n            if(ress[\"RES\"]==\"meiyou\"){\n              this.res = this.res+\"\\n\"+item.p+\"性质验证出错，请稍后重试!\\n\";\n              this.computeState();\n              item.state = \"error\";\n            }\n            else if(ress[\"RES\"] == \"yes\"){\n              this.res = this.res+\"\\n\"+item.p+\"性质满足，状态探索：\"+ress[\"states\"]+\"，运行时间：\"+ress[\"time\"]+\"\\n\"+ress[\"dec\"];\n              this.computeState();\n              item.state = \"true\";\n            }\n            else{\n              this.res = this.res+\"\\n\"+item.p+\"性质不满足，状态探索：\"+ress[\"states\"]+\"，运行时间：\"+ress[\"time\"]+\"\\n\"+ress[\"dec\"];\n              this.computeState();\n              item.state = \"false\";\n            }\n          }, function (err) {\n\n            console.log(err)\n          });\n\n        }\n      })\n    },\n\n    del() {\n      // 判断有没有选中一行数据\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行移除')\n      this.$confirm('您确定要删除当前选择的性质吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        //定义一个新的数组\n        const tempArr = []\n        //遍历table表的数组，如果遍历到的table中的id不等于选中的那一行id，那么将数\n        //据push到新的数组里面，也就是说，新的数组里面没有选中的那一行的值\n        this.tableData.forEach(item => {\n          if (item.Id < this.Id) {\n            tempArr.push(item)\n          }\n          else if(item.Id > this.Id){\n            item.Id--;\n            tempArr.push(item)\n          }\n          else{\n\n          }\n        })\n//将新的数组赋值给table表数组，此时选中那一行删除成功\n        this.tableData = tempArr\n//将选中的一行id置空。\n        this.Id = ''\n      })\n    },\n//row是选中这一行的全部数据，如果table的数组是从后端请求回来的，可以将id替换成每一行唯一的那个标志，比如序号等等。\n    chooseItem(row) {\n      this.Id = row.Id;\n      console.log(this.Id);\n    },\n    add() {\n      console.log(this.brand);\n      if (this.brand != \"\") {  //如果输入的值不为空\n        let obj = {\n          Id:this.tableData.length+1,\n          p: this.brand,\n          state:\"\",\n        };\n        this.tableData.push(obj);\n        let param = {\"data\": this.brand};\n        axios.post('http://localhost:8077/sscm/addquery', param).then(function(response) {\n          console.log(response.data)\n        }, function(err){\n          console.log(err)\n        });\n\n        this.brand = \"\";\n      } else {\n        let obj = {\n          Id:this.tableData.length+1,\n          p: \"\",\n          state:\"\",\n        };\n        this.tableData.push(obj);\n      }\n\n    },\n  }\n}\n</script>\n\n<style scoped>\n.tt{\n  position: absolute;\n  top: 50px;\n}\n\n.t{\n  height: 200px;\n}\n\n.in{\n  position: absolute;\n  top: 280px;\n  width: 50px;\n\n}\n\n.res{\n  position: absolute;\n  top: 380px;\n  width: 50px;\n}\n\n.dw{\n  position: absolute;\n  top: 380px;\n  width: 50px;\n  left: 520px;\n}\n\n.n1{\n  position: absolute;\n  top: 240px;\n\n}\n\n.n2{\n  position: absolute;\n  top: 340px;\n\n}\n\n.n3{\n  position: absolute;\n  top: 340px;\n  left: 520px;\n}\n\n.b1b{\n  position: absolute;\n  left: 1050px;\n  top: 50px;\n  width: 100px;\n}\n\n.b2b{\n  position: absolute;\n  left: 1040px;\n  top: 100px;\n  width: 100px;\n}\n.b3b{\n  position: absolute;\n  left: 1040px;\n  top: 150px;\n  width: 100px;\n}\n.b4b{\n  position: absolute;\n  left: 1040px;\n  top: 200px;\n  width: 100px;\n}\n\n.el-table td {\n  border-bottom: none;\n}\n.tableStyle::before{\n  width: 0;\n}\n.el-table{\n  border: 1px solid #ccc;\n}\n</style>"]},"metadata":{},"sourceType":"module"}