{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"demo-image__placeholder\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"sd\"\n}, \"Requirements Dependency Diagram\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"block\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_image = _resolveComponent(\"el-image\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"  <p class=\\\"sdp\\\">Requirements Dependency Diagram List</p>\"), _createCommentVNode(\"  &lt;!&ndash;  <textarea class=\\\"wb2\\\" style=\\\"resize:none;\\\" v-model=\\\"condep\\\" name=\\\"\\\" cols=\\\"65\\\" rows=\\\"30\\\" placeholder=\\\"控制依赖关系......\\\"></textarea>&ndash;&gt;\"), _createCommentVNode(\"  <el-tree :data=\\\"treedata\\\"\"), _createCommentVNode(\"           :props=\\\"defaultProps\\\" @node-click=\\\"handleNodeClick\\\" class=\\\"td1\\\"></el-tree>\"), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_image, {\n    src: require('../assets/RDD/' + $data.imageUrl)\n  }, null, 8 /* PROPS */, [\"src\"])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EASOA,KAAK,EAAC;AAAyB;gCAClCC,oBAAiD;EAA9CD,KAAK,EAAC;AAAI,GAAC,iCAA+B;;EACxCA,KAAK,EAAC;AAAO;;;6DARtBE,kFAAgE,EAChEA,8LAAgK,EAEhKA,oDAAkC,EAClCA,kHAA4F,EAE1FD,oBAKM,OALNE,UAKM,GAJJC,UAAiD,EACjDH,oBAEM,OAFNI,UAEM,GADJC,aAAiEC;IAAtDC,GAAG,EAAEC,OAAO,oBAAoBC,cAAQ","names":["class","_createElementVNode","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_el_image","src","require","$data"],"sourceRoot":"","sources":["C:\\Users\\yang\\Desktop\\CVCES\\TA-frontend\\src\\views\\ShowRDD.vue"],"sourcesContent":["<template>\r\n\r\n\r\n<!--  <p class=\"sdp\">Requirements Dependency Diagram List</p>-->\r\n<!--  &lt;!&ndash;  <textarea class=\"wb2\" style=\"resize:none;\" v-model=\"condep\" name=\"\" cols=\"65\" rows=\"30\" placeholder=\"控制依赖关系......\"></textarea>&ndash;&gt;-->\r\n\r\n<!--  <el-tree :data=\"treedata\"-->\r\n<!--           :props=\"defaultProps\" @node-click=\"handleNodeClick\" class=\"td1\"></el-tree>-->\r\n\r\n  <div class=\"demo-image__placeholder\">\r\n    <p class=\"sd\">Requirements Dependency Diagram</p>\r\n    <div class=\"block\">\r\n      <el-image :src=\"require('../assets/RDD/' + imageUrl)\"></el-image>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"rdd\",\r\n  data() {\r\n    return {\r\n      imageUrl: 'LCS_RDD.png',\r\n      condep : '',\r\n      datadep : '',\r\n\r\n      treedata: [\r\n      ],\r\n\r\n      defaultProps: {\r\n        label: 'label'\r\n      }\r\n\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.UploadSD();\r\n  },\r\n  computed: {\r\n\r\n  },\r\n\r\n  methods: {\r\n\r\n    handleNodeClick(data) {\r\n      console.log(data.label);\r\n\r\n      this.imageUrl = data.label+\".png\";\r\n    },\r\n\r\n    UploadSD() {\r\n      var _this = this;\r\n\r\n      axios.post('http://localhost:8077/sscm/getrdd').then(response => {\r\n        let tres = response.data;\r\n\r\n        for(var k in tres){\r\n\r\n          // console.log(tres[k]);\r\n          // let obj = {\r\n          //   label: tres[k]\r\n          // };\r\n          // _this.treedata.push(obj);\r\n\r\n          _this.imageUrl = tres[k]+\".png\";\r\n        }\r\n\r\n        this.$message({\r\n          message: \"Generating Requirements Dependency Diagram Success!\",\r\n          type: 'success'\r\n        })\r\n      });\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n\r\n.td1{\r\n  position: absolute;\r\n  top: 200px;\r\n  left: 80px;\r\n  height: 500px;\r\n  width: 200px;\r\n  transform: scale(130%);\r\n}\r\n\r\n\r\n.sdp{\r\n  position: absolute;\r\n  top: 50px;\r\n  left: 60px;\r\n  width: 500px;\r\n  font-size: 25px;\r\n}\r\n\r\n.sd{\r\n  font-size: 25px;\r\n}\r\n\r\n.demo-image__placeholder{\r\n  position: absolute;\r\n  top: 50px;\r\n  left: 500px;\r\n  width: 600px;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}