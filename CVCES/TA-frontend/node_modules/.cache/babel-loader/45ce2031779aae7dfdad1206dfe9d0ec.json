{"ast":null,"code":"import { RectResize } from \"@logicflow/extension\";\nimport { h } from '@logicflow/core';\n// 提供节点\nclass CustomState7Node extends RectResize.view {\n  getLabelShape() {\n    const {\n      model\n    } = this.props;\n    const {\n      x,\n      y,\n      width,\n      height\n    } = model;\n    const style = model.getNodeStyle();\n    return h(\"svg\", {\n      x: x - width / 2 + 4,\n      y: y - height / 2 + 4,\n      width: 50,\n      height: 50,\n      viewBox: \"0 0 80 80\"\n    }, h(\"path\", {\n      stroke: 'rgba(50,50,50,1)',\n      strokeWidth: 2,\n      fill: '#97b6cf',\n      fillOpacity: 1,\n      d: \"M0 10C0 -3.3333333333333335 20 -3.3333333333333335 20 10C20 23.333333333333332 0 23.333333333333332 0 10Z\"\n    }));\n  }\n  /**\n   * 完全自定义节点外观方法\n   */\n  getShape() {\n    const {\n      model,\n      graphModel\n    } = this.props;\n    const {\n      x,\n      y,\n      width,\n      height,\n      radius\n    } = model;\n    const style = model.getNodeStyle();\n    return h(\"g\", {}, [this.getLabelShape()]);\n  }\n}\n\n// 提供节点的属性\nclass CustomState7Model extends RectResize.model {\n  initNodeData(data) {\n    super.initNodeData(data);\n    /**\n     * 实际就是对于图形SVG的属性\n     * http://logic-flow.org/guide/basic/node.html#%E8%AE%A4%E8%AF%86logicflow%E7%9A%84%E5%9F%BA%E7%A1%80%E8%8A%82%E7%82%B9\n     */\n    this.width = 20;\n    this.height = 20;\n    this.text.draggable = true; // 允许文本被拖动\n    this.text.editable = true; // 允许文本被编辑\n  }\n\n  getTextStyle() {\n    const style = super.getTextStyle();\n    style.fontSize = 16;\n    style.color = 'purple';\n    return style;\n  }\n  getNodeStyle() {\n    const style = super.getNodeStyle();\n    style.stroke = 'black';\n    // style.strokeDasharray = '3 3';\n    return style;\n  }\n}\nexport default {\n  type: \"bpmn:customState7\",\n  view: CustomState7Node,\n  model: CustomState7Model\n};","map":{"version":3,"names":["RectResize","h","CustomState7Node","view","getLabelShape","model","props","x","y","width","height","style","getNodeStyle","viewBox","stroke","strokeWidth","fill","fillOpacity","d","getShape","graphModel","radius","CustomState7Model","initNodeData","data","text","draggable","editable","getTextStyle","fontSize","color","type"],"sources":["C:/Users/yang/Desktop/软件需求与设计模型的形式化验证工具v2.0/TA-frontend/src/registerNode/CustomState7.js"],"sourcesContent":["import {RectResize} from \"@logicflow/extension\";\nimport { h } from '@logicflow/core';\n// 提供节点\nclass CustomState7Node extends RectResize.view { \n  getLabelShape() {\n    const { model } = this.props;\n    const { x, y, width, height } = model;\n    const style = model.getNodeStyle();\n    return h(\n      \"svg\",\n      {\n        x: x - width / 2 + 4,\n        y: y - height / 2 + 4,\n        width: 50,\n        height: 50,\n        viewBox: \"0 0 80 80\"\n      },\n      h(\"path\", {\n        stroke:'rgba(50,50,50,1)',\n        strokeWidth: 2,\n        fill: '#97b6cf',\n        fillOpacity: 1,\n        d:\n        \"M0 10C0 -3.3333333333333335 20 -3.3333333333333335 20 10C20 23.333333333333332 0 23.333333333333332 0 10Z\" \n      })\n    );\n  }\n  /**\n   * 完全自定义节点外观方法\n   */\n  getShape() {\n    const { model, graphModel } = this.props;\n    const { x, y, width, height, radius } = model;\n    const style = model.getNodeStyle();\n    return h(\"g\", {}, [\n      this.getLabelShape()\n    ]);\n  }\n}\n\n// 提供节点的属性\nclass CustomState7Model extends RectResize.model {\n  initNodeData(data) {\n    super.initNodeData(data);\n    /**\n     * 实际就是对于图形SVG的属性\n     * http://logic-flow.org/guide/basic/node.html#%E8%AE%A4%E8%AF%86logicflow%E7%9A%84%E5%9F%BA%E7%A1%80%E8%8A%82%E7%82%B9\n     */\n    this.width = 20;\n    this.height = 20;\n\n    this.text.draggable = true; // 允许文本被拖动\n    this.text.editable = true; // 允许文本被编辑\n    \n  }\n\n  getTextStyle() {\n    const style = super.getTextStyle();\n    style.fontSize = 16;\n    style.color = 'purple';\n    return style;\n  }\n\n  getNodeStyle() {\n    const style = super.getNodeStyle();\n    style.stroke = 'black';\n    // style.strokeDasharray = '3 3';\n    return style;\n  }\n}\n\n\nexport default {\n  type: \"bpmn:customState7\",\n  view: CustomState7Node,\n  model: CustomState7Model\n}\n"],"mappings":"AAAA,SAAQA,UAAU,QAAO,sBAAsB;AAC/C,SAASC,CAAC,QAAQ,iBAAiB;AACnC;AACA,MAAMC,gBAAgB,SAASF,UAAU,CAACG,IAAI,CAAC;EAC7CC,aAAa,GAAG;IACd,MAAM;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAC5B,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEC,KAAK;MAAEC;IAAO,CAAC,GAAGL,KAAK;IACrC,MAAMM,KAAK,GAAGN,KAAK,CAACO,YAAY,EAAE;IAClC,OAAOX,CAAC,CACN,KAAK,EACL;MACEM,CAAC,EAAEA,CAAC,GAAGE,KAAK,GAAG,CAAC,GAAG,CAAC;MACpBD,CAAC,EAAEA,CAAC,GAAGE,MAAM,GAAG,CAAC,GAAG,CAAC;MACrBD,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVG,OAAO,EAAE;IACX,CAAC,EACDZ,CAAC,CAAC,MAAM,EAAE;MACRa,MAAM,EAAC,kBAAkB;MACzBC,WAAW,EAAE,CAAC;MACdC,IAAI,EAAE,SAAS;MACfC,WAAW,EAAE,CAAC;MACdC,CAAC,EACD;IACF,CAAC,CAAC,CACH;EACH;EACA;AACF;AACA;EACEC,QAAQ,GAAG;IACT,MAAM;MAAEd,KAAK;MAAEe;IAAW,CAAC,GAAG,IAAI,CAACd,KAAK;IACxC,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEC,KAAK;MAAEC,MAAM;MAAEW;IAAO,CAAC,GAAGhB,KAAK;IAC7C,MAAMM,KAAK,GAAGN,KAAK,CAACO,YAAY,EAAE;IAClC,OAAOX,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAChB,IAAI,CAACG,aAAa,EAAE,CACrB,CAAC;EACJ;AACF;;AAEA;AACA,MAAMkB,iBAAiB,SAAStB,UAAU,CAACK,KAAK,CAAC;EAC/CkB,YAAY,CAACC,IAAI,EAAE;IACjB,KAAK,CAACD,YAAY,CAACC,IAAI,CAAC;IACxB;AACJ;AACA;AACA;IACI,IAAI,CAACf,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,MAAM,GAAG,EAAE;IAEhB,IAAI,CAACe,IAAI,CAACC,SAAS,GAAG,IAAI,CAAC,CAAC;IAC5B,IAAI,CAACD,IAAI,CAACE,QAAQ,GAAG,IAAI,CAAC,CAAC;EAE7B;;EAEAC,YAAY,GAAG;IACb,MAAMjB,KAAK,GAAG,KAAK,CAACiB,YAAY,EAAE;IAClCjB,KAAK,CAACkB,QAAQ,GAAG,EAAE;IACnBlB,KAAK,CAACmB,KAAK,GAAG,QAAQ;IACtB,OAAOnB,KAAK;EACd;EAEAC,YAAY,GAAG;IACb,MAAMD,KAAK,GAAG,KAAK,CAACC,YAAY,EAAE;IAClCD,KAAK,CAACG,MAAM,GAAG,OAAO;IACtB;IACA,OAAOH,KAAK;EACd;AACF;AAGA,eAAe;EACboB,IAAI,EAAE,mBAAmB;EACzB5B,IAAI,EAAED,gBAAgB;EACtBG,KAAK,EAAEiB;AACT,CAAC"},"metadata":{},"sourceType":"module"}