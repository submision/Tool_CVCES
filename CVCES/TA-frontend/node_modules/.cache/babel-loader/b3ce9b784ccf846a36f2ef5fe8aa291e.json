{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: 'ExcelTransferTable',\n  components: {},\n  data() {\n    return {\n      tableData: [],\n      // 表格里面的数据\n      Id: '',\n      brand: \"\",\n      res: '',\n      dingwei: '',\n      num: '',\n      proname: this.$route.query.projectname,\n      desversion: this.$route.query.designversion\n    };\n  },\n  mounted() {\n    this.getresult();\n  },\n  methods: {\n    //定位结果功能函数\n    localize() {\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行定位');\n      this.tableData.forEach(item => {\n        if (item.Id == this.Id) {\n          if (item.state == \"通过\") {\n            //性质通过不能进行定位\n            this.$message.warning('满足该性质，无法定位错误原因！');\n          } else if (item.state == \"不通过\") {\n            //性质不通过调用后端定位函数Localize\n            this.msg = this.$message({\n              // 需要一个参数接收这个$message(msg来自data)\n              duration: 0,\n              type: 'warning',\n              message: '定位中....'\n            });\n            axios.post('http://localhost:8077/sscm/Localize', item.p).then(response => {\n              console.log(response.data);\n              this.msg.close(); // 这样才能正确关闭\n              this.msg = this.$message({\n                duration: 1000,\n                type: 'success',\n                message: '定位成功！'\n              });\n              let ress = response.data; //返回结果\n              this.dingwei = this.dingwei + \"\\n\" + item.p + ress[\"dwres\"];\n            }, function (err) {\n              console.log(err);\n            });\n          } else {\n            this.$message.warning('该性质还未进行验证，无法定位错误原因！');\n          }\n        }\n      });\n    },\n    //通过链接访问后端查找相应项目及其版本的验证结果\n    getresult() {\n      var _this = this;\n      console.log(_this.desversion);\n      console.log(_this.proname);\n      axios.get('http://localhost:8077/sscm/getres', {\n        params: {\n          pname: _this.proname,\n          dname: _this.desversion\n        }\n      }).then(function (response) {\n        console.log(response);\n        console.log(response.data);\n        let tres = response.data;\n        _this.res = \"所有模型的状态空间为：\" + tres[\"statespace\"] + \"\\n\\n\";\n        _this.dingwei = tres[\"loc\"] + \"\\n\";\n        for (var k in tres) {\n          if (k == \"statespace\" || k == \"loc\") {\n            continue;\n          } else {\n            let str = \"\";\n            if (tres[k].includes(\"不通过\")) {\n              str = \"不通过\";\n              _this.res += tres[k] + \"\\n\";\n            } else if (tres[k].includes(\"通过\")) {\n              str = \"通过\";\n              _this.res += tres[k] + \"\\n\";\n            } else {\n              str = \"出错\";\n            }\n            let obj = {\n              Id: _this.tableData.length + 1,\n              p: k,\n              state: str\n            };\n            _this.tableData.push(obj);\n          }\n        }\n      }, function (err) {\n        console.log(err);\n      });\n    },\n    computeState() {\n      axios.post('http://localhost:8077/sscm/Statenum').then(response => {\n        console.log(response.data);\n        //this.res = this.res +\",\"+ response.data +\"\\n\";\n        console.log(\"num:\" + response.data);\n      }, function (err) {\n        console.log(err);\n      });\n    },\n    check() {\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行验证');\n      this.tableData.forEach(item => {\n        if (item.Id == this.Id) {\n          this.msg = this.$message({\n            // 需要一个参数接收这个$message(msg来自data)\n            duration: 0,\n            type: 'warning',\n            message: '等待中....'\n          });\n          axios.post('http://localhost:8077/sscm/Check', item.p).then(response => {\n            console.log(response.data);\n            this.msg.close(); // 这样才能正确关闭\n            this.msg = this.$message({\n              duration: 1000,\n              type: 'success',\n              message: '运行成功！'\n            });\n            let ress = response.data;\n            if (ress[\"RES\"] == \"meiyou\") {\n              this.res = this.res + \"\\n\" + item.p + \"验证结果：\\n\" + ress[\"RR\"];\n              this.computeState();\n              item.state = \"出错\";\n            } else if (ress[\"RES\"] == \"yes\") {\n              this.res = this.res + \"\\n\" + item.p + \"验证结果：\\n\" + ress[\"RR\"] + \"\\n\" + \"状态探索：\" + ress[\"states\"] + \"，运行时间：\" + ress[\"time\"] + \"\\n\" + ress[\"dec\"];\n              this.computeState();\n              item.state = \"通过\";\n            } else {\n              this.res = this.res + \"\\n\" + item.p + \"验证结果：\\n\" + ress[\"RR\"] + \"\\n\" + \"状态探索：\" + ress[\"states\"] + \"，运行时间：\" + ress[\"time\"] + \"\\n\" + ress[\"dec\"];\n              this.computeState();\n              item.state = \"不通过\";\n            }\n          }, function (err) {\n            console.log(err);\n          });\n        }\n      });\n    },\n    del() {\n      // 判断有没有选中一行数据\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行移除');\n      this.$confirm('您确定要删除当前选择的性质吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        //定义一个新的数组\n        const tempArr = [];\n        //遍历table表的数组，如果遍历到的table中的id不等于选中的那一行id，那么将数\n        //据push到新的数组里面，也就是说，新的数组里面没有选中的那一行的值\n        this.tableData.forEach(item => {\n          if (item.Id < this.Id) {\n            tempArr.push(item);\n          } else if (item.Id > this.Id) {\n            item.Id--;\n            tempArr.push(item);\n          } else {\n            if (item.state != \"\") {\n              let param = {\n                \"data\": item.p\n              };\n              axios.post('http://localhost:8077/sscm/delquery', param).then(function (response) {\n                console.log(response.data);\n              }, function (err) {\n                console.log(err);\n              });\n            }\n          }\n        });\n        //将新的数组赋值给table表数组，此时选中那一行删除成功\n        this.tableData = tempArr;\n        //将选中的一行id置空。\n        this.Id = '';\n      });\n    },\n    //row是选中这一行的全部数据，如果table的数组是从后端请求回来的，可以将id替换成每一行唯一的那个标志，比如序号等等。\n    chooseItem(row) {\n      this.Id = row.Id;\n      console.log(this.Id);\n    },\n    add() {\n      console.log(this.brand);\n      if (this.brand != \"\") {\n        //如果输入的值不为空\n        let obj = {\n          Id: this.tableData.length + 1,\n          p: this.brand,\n          state: \"\"\n        };\n        this.tableData.push(obj);\n        let param = {\n          \"data\": this.brand\n        };\n        axios.post('http://localhost:8077/sscm/addquery', param).then(function (response) {\n          console.log(response.data);\n        }, function (err) {\n          console.log(err);\n        });\n        this.brand = \"\";\n      } else {\n        let obj = {\n          Id: this.tableData.length + 1,\n          p: \"\",\n          state: \"\"\n        };\n        this.tableData.push(obj);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","components","data","tableData","Id","brand","res","dingwei","num","proname","$route","query","projectname","desversion","designversion","mounted","getresult","methods","localize","$message","warning","forEach","item","state","msg","duration","type","message","post","p","then","response","console","log","close","ress","err","_this","get","params","pname","dname","tres","k","str","includes","obj","length","push","computeState","check","del","$confirm","confirmButtonText","cancelButtonText","tempArr","param","chooseItem","row","add"],"sourceRoot":"","sources":["C:\\Users\\yang\\Desktop\\软件需求与设计模型的形式化验证工具v2.0\\TA-frontend\\src\\views\\Checkproperties.vue"],"sourcesContent":["<template>\n  <div class=\"tt\">\n    <el-table class=\"t\"\n              :row-style=\"{height:'20px'}\" max-height=\"250\" style=\"font-size: 15px\"\n              :data=\"tableData\"\n              border\n              fit\n              highlight-current-row\n              height=\"200\"\n              @cell-click=\"chooseItem\"\n    >\n      <el-table-column\n          property=\"Id\"\n          label=\"序号\"\n          width=\"60\">\n      </el-table-column>\n\n      <el-table-column\n          property=\"p\"\n          label=\"性质\"\n          width=\"870\">\n      </el-table-column>\n\n      <el-table-column\n          property=\"state\"\n          label=\"状态\"\n          width=\"80\">\n      </el-table-column>\n\n    </el-table>\n\n    <div class=\"n\">\n      <p>性质列表</p>\n    </div>\n    <div class=\"n1\">\n      <p>性质撰写</p>\n    </div>\n    <div class=\"n4\">\n      <p>性质模板</p>\n    </div>\n    <div class=\"in\">\n      <textarea v-model=\"brand\" cols=\"45\" rows=\"5\"></textarea>\n    </div>\n    <div class=\"n2\">\n      <p>验证结果</p>\n    </div>\n    <div class=\"res\">\n      <textarea v-model=\"res\" cols=\"65\" rows=\"13\"></textarea>\n    </div>\n    <div class=\"n3\">\n      <p>定位结果</p>\n    </div>\n    <div class=\"dw\">\n      <textarea v-model=\"dingwei\" cols=\"65\" rows=\"13\"></textarea>\n    </div>\n\n\n    <el-button class=\"b1b\" @click=\"check()\">开始验证</el-button>\n    <el-button class=\"b4b\" @click=\"add\">添加</el-button>\n    <el-button class=\"b2b\" @click=\"del()\">删除</el-button>\n    <el-button class=\"b3b\" @click=\"localize()\">定位</el-button>\n  </div>\n  <div>\n    <el-button class=\"bbb1\" style=\"text-align: left\">\n      1、不一致性：A[] not deadlock or E&lt;&gt; not deadlock<br>\n      2、状态可达性：E&lt;&gt; 模型名称.模型中状态名称 例：E&lt;&gt; OverTempProtect.ReadTemp<br>\n      3、安全性：A[] not 模型名称.模型中状态名称 and not 模型名称.模型中状态名称<br>  例：A[] not CommandOperator.ICUOPOff1 and not OverTempProtect.ICUAutoOn\n    </el-button>\n  </div>\n\n\n\n</template>\n\n<script>\n\nimport axios from \"axios\";\n\nexport default {\n  name: 'ExcelTransferTable',\n  components: { },\n\n  data() {\n    return {\n      tableData: [\n\n      ], // 表格里面的数据\n      Id: '',\n      brand:\"\",\n      res: '',\n      dingwei: '',\n      num:'',\n      proname: this.$route.query.projectname,\n      desversion: this.$route.query.designversion,\n    }\n  },\n\n  mounted() {\n    this.getresult()\n  },\n\n  methods: {\n\n    //定位结果功能函数\n    localize(){\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行定位')\n      this.tableData.forEach(item =>{\n        if(item.Id == this.Id){\n          if(item.state == \"通过\"){ //性质通过不能进行定位\n            this.$message.warning('满足该性质，无法定位错误原因！')\n          }\n          else if(item.state == \"不通过\") { //性质不通过调用后端定位函数Localize\n            this.msg = this.$message({ // 需要一个参数接收这个$message(msg来自data)\n              duration: 0,\n              type: 'warning',\n              message: '定位中....'\n            });\n            axios.post('http://localhost:8077/sscm/Localize', item.p).then(response => {\n              console.log(response.data);\n              this.msg.close();  // 这样才能正确关闭\n              this.msg = this.$message({\n                duration: 1000,\n                type: 'success',\n                message: '定位成功！'\n              });\n              let ress = response.data;  //返回结果\n              this.dingwei = this.dingwei + \"\\n\" +item.p + ress[\"dwres\"];\n\n            }, function (err) {\n\n              console.log(err)\n            });\n          }\n          else{\n            this.$message.warning('该性质还未进行验证，无法定位错误原因！')\n          }\n\n        }\n      })\n\n    },\n\n    //通过链接访问后端查找相应项目及其版本的验证结果\n    getresult() {\n      var _this = this;\n      console.log(_this.desversion);\n      console.log(_this.proname);\n\n      axios.get('http://localhost:8077/sscm/getres',{\n        params: {\n          pname: _this.proname,\n          dname: _this.desversion\n        }\n      }).then(function (response) {\n        console.log(response);\n        console.log(response.data);\n\n        let tres = response.data;\n        _this.res = \"所有模型的状态空间为：\"+tres[\"statespace\"]+\"\\n\\n\";\n        _this.dingwei = tres[\"loc\"]+\"\\n\";\n\n        for(var k in tres){\n          if(k == \"statespace\" || k == \"loc\"){\n            continue;\n          }\n          else{\n            let str = \"\";\n            if(tres[k].includes(\"不通过\")){\n              str = \"不通过\";\n              _this.res += tres[k]+\"\\n\";\n            }\n            else if(tres[k].includes(\"通过\")){\n              str = \"通过\";\n              _this.res += tres[k]+\"\\n\";\n            }\n            else{\n              str = \"出错\";\n            }\n            let obj = {\n              Id: _this.tableData.length+1,\n              p: k,\n              state: str,\n            };\n            _this.tableData.push(obj);\n          }\n        }\n\n      }, function (err) {\n        console.log(err)\n      });\n\n\n    },\n\n    computeState(){\n      axios.post('http://localhost:8077/sscm/Statenum').then(response => {\n        console.log(response.data);\n        //this.res = this.res +\",\"+ response.data +\"\\n\";\n        console.log(\"num:\"+response.data);\n      }, function (err) {\n        console.log(err)\n      });\n    },\n\n    check(){\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行验证')\n      this.tableData.forEach(item =>{\n        if(item.Id == this.Id){\n          this.msg = this.$message({ // 需要一个参数接收这个$message(msg来自data)\n            duration: 0,\n            type: 'warning',\n            message: '等待中....'\n          });\n          axios.post('http://localhost:8077/sscm/Check', item.p).then(response => {\n            console.log(response.data);\n            this.msg.close();  // 这样才能正确关闭\n            this.msg = this.$message({\n              duration: 1000,\n              type: 'success',\n              message: '运行成功！'\n            });\n\n            let ress = response.data;\n\n            if(ress[\"RES\"]==\"meiyou\"){\n              this.res = this.res+\"\\n\"+item.p+\"验证结果：\\n\"+ress[\"RR\"];\n              this.computeState();\n              item.state = \"出错\";\n            }\n            else if(ress[\"RES\"] == \"yes\"){\n              this.res = this.res+\"\\n\"+item.p+\"验证结果：\\n\"+ress[\"RR\"]+\"\\n\"+\"状态探索：\"+ress[\"states\"]+\"，运行时间：\"+ress[\"time\"]+\"\\n\"+ress[\"dec\"];\n              this.computeState();\n              item.state = \"通过\";\n            }\n            else{\n              this.res = this.res+\"\\n\"+item.p+\"验证结果：\\n\"+ress[\"RR\"]+\"\\n\"+\"状态探索：\"+ress[\"states\"]+\"，运行时间：\"+ress[\"time\"]+\"\\n\"+ress[\"dec\"];\n              this.computeState();\n              item.state = \"不通过\";\n            }\n          }, function (err) {\n\n            console.log(err)\n          });\n\n        }\n      })\n    },\n\n    del() {\n      // 判断有没有选中一行数据\n      if (!this.Id) return this.$message.warning('请先选择一条性质进行移除')\n      this.$confirm('您确定要删除当前选择的性质吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        //定义一个新的数组\n        const tempArr = []\n        //遍历table表的数组，如果遍历到的table中的id不等于选中的那一行id，那么将数\n        //据push到新的数组里面，也就是说，新的数组里面没有选中的那一行的值\n        this.tableData.forEach(item => {\n\n          if (item.Id < this.Id) {\n            tempArr.push(item)\n          }\n          else if(item.Id > this.Id){\n            item.Id--;\n            tempArr.push(item)\n          }\n          else{\n            if(item.state!=\"\"){\n              let param = {\"data\": item.p};\n              axios.post('http://localhost:8077/sscm/delquery', param).then(function(response) {\n                console.log(response.data)\n              }, function(err){\n                console.log(err)\n              });\n            }\n          }\n        })\n//将新的数组赋值给table表数组，此时选中那一行删除成功\n        this.tableData = tempArr\n//将选中的一行id置空。\n        this.Id = ''\n\n      })\n    },\n\n\n//row是选中这一行的全部数据，如果table的数组是从后端请求回来的，可以将id替换成每一行唯一的那个标志，比如序号等等。\n    chooseItem(row) {\n      this.Id = row.Id;\n      console.log(this.Id);\n    },\n\n    add() {\n      console.log(this.brand);\n      if (this.brand != \"\") {  //如果输入的值不为空\n        let obj = {\n          Id:this.tableData.length+1,\n          p: this.brand,\n          state:\"\",\n        };\n        this.tableData.push(obj);\n        let param = {\"data\": this.brand};\n        axios.post('http://localhost:8077/sscm/addquery', param).then(function(response) {\n          console.log(response.data)\n        }, function(err){\n          console.log(err)\n        });\n\n        this.brand = \"\";\n      } else {\n        let obj = {\n          Id:this.tableData.length+1,\n          p: \"\",\n          state:\"\",\n        };\n        this.tableData.push(obj);\n      }\n\n    },\n  }\n}\n</script>\n\n<style scoped>\n.tt{\n  position: absolute;\n  top: 10px;\n}\n\n.t{\n  top: 40px;\n  height: 200px;\n}\n\n.in{\n  position: absolute;\n  top: 280px;\n  width: 50px;\n\n}\n\n.res{\n  position: absolute;\n  top: 400px;\n  width: 50px;\n}\n\n.dw{\n  position: absolute;\n  top: 400px;\n  width: 50px;\n  left: 520px;\n}\n\n.n{\n  position: absolute;\n  top: 0px;\n}\n\n\n.bbb1{\n  position: absolute;\n  top: 290px;\n  left: 370px;\n  width: 640px;\n  height: 80px;\n  font-size: 15px;\n  -webkit-border-vertical-spacing: 20px;\n  padding-top: 10px;\n  padding-left: 30px;\n  border-color: black;\n  color: black;\n}\n\n.n1{\n  position: absolute;\n  top: 240px;\n}\n\n.n2{\n  position: absolute;\n  top: 360px;\n\n}\n\n.n3{\n  position: absolute;\n  top: 360px;\n  left: 520px;\n}\n\n.n4{\n  position: absolute;\n  top: 240px;\n  left: 370px;\n}\n\n.b1b{\n  position: absolute;\n  left: 1050px;\n  top: 40px;\n  width: 100px;\n}\n\n.b2b{\n  position: absolute;\n  left: 1040px;\n  top: 90px;\n  width: 100px;\n}\n.b3b{\n  position: absolute;\n  left: 1040px;\n  top: 140px;\n  width: 100px;\n}\n.b4b{\n  position: absolute;\n  left: 1040px;\n  top: 280px;\n  width: 100px;\n}\n\n.el-table td {\n  border-bottom: none;\n}\n.tableStyle::before{\n  width: 0;\n}\n.el-table{\n  border: 1px solid #ccc;\n}\n\n.el-button:hover {\n  background: white;\n  color: black;\n  border-color: black;\n}\n\n\n\n</style>"]},"metadata":{},"sourceType":"module"}