{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"p2\"\n}, \"Sequence Diagram\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"wb2\",\n    style: {\n      \"resize\": \"none\"\n    },\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.condep = $event),\n    name: \"\",\n    cols: \"65\",\n    rows: \"30\",\n    placeholder: \"控制依赖关系......\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.condep]]), _createVNode(_component_el_tree, {\n    data: $data.data,\n    props: $data.defaultProps,\n    onNodeClick: $options.handleNodeClick\n  }, null, 8 /* PROPS */, [\"data\", \"props\", \"onNodeClick\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAGEA,oBAAkC;EAA/BC,KAAK,EAAC;AAAI,GAAC,kBAAgB;;;;6DAA9BC,UAAkC,kBAClCF,oBAA8H;IAApHC,KAAK,EAAC,KAAK;IAACE,KAAoB,EAApB;MAAA;IAAA,CAAoB;+DAAUC,YAAM;IAAEC,IAAI,EAAC,EAAE;IAACC,IAAI,EAAC,IAAI;IAACC,IAAI,EAAC,IAAI;IAACC,WAAW,EAAC;iDAAhDJ,YAAM,KAE1DK,aAAoFC;IAA1EC,IAAI,EAAEP,UAAI;IAAGQ,KAAK,EAAER,kBAAY;IAAGS,WAAU,EAAEC","names":["_createElementVNode","class","_hoisted_1","style","$data","name","cols","rows","placeholder","_createVNode","_component_el_tree","data","props","onNodeClick","$options"],"sourceRoot":"","sources":["C:\\Users\\yang\\Desktop\\CVCES\\TA-frontend\\src\\views\\GetSD.vue"],"sourcesContent":["<template>\r\n\r\n\r\n  <p class=\"p2\">Sequence Diagram</p>\r\n  <textarea class=\"wb2\" style=\"resize:none;\" v-model=\"condep\" name=\"\" cols=\"65\" rows=\"30\" placeholder=\"控制依赖关系......\"></textarea>\r\n\r\n  <el-tree :data=\"data\" :props=\"defaultProps\" @node-click=\"handleNodeClick\"></el-tree>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"condependence\",\r\n  data() {\r\n    return {\r\n      condep : '',\r\n      datadep : '',\r\n\r\n      data: [{\r\n        label: '一级 1',\r\n      }, {\r\n        label: '一级 2',\r\n      }, {\r\n        label: '一级 3',\r\n      }],\r\n\r\n      defaultProps: {\r\n        label: 'label'\r\n      }\r\n\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.UploadDenpend();\r\n  },\r\n  computed: {\r\n\r\n  },\r\n\r\n  methods: {\r\n\r\n    handleNodeClick(data) {\r\n      console.log(data);\r\n    },\r\n\r\n    UploadDenpend() {\r\n\r\n      axios.post('http://localhost:8077/sscm/uploadsd').then(response => {\r\n\r\n        // this.condep = res[\"cd\"];\r\n        // this.datadep = res[\"dd\"];\r\n        this.$message({\r\n          message: \"Identifying requirements dependencies successfully!\",\r\n          type: 'success'\r\n        })\r\n      });\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.wb2{\r\n  position: absolute;\r\n  top: 180px;\r\n  left: 80px;\r\n}\r\n\r\n.wb1{\r\n  position: absolute;\r\n  top:180px;\r\n  left: 630px;\r\n}\r\n\r\n.p2{\r\n  position: absolute;\r\n  top: 100px;\r\n  left: 80px;\r\n  width: 500px;\r\n  font-size: 25px;\r\n}\r\n\r\n.p3{\r\n  position: absolute;\r\n  top: 100px;\r\n  left: 630px;\r\n  width: 500px;\r\n  font-size: 25px;\r\n}\r\n\r\n\r\n\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}